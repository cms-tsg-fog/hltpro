# include all templates in https://gitlab.cern.ch/cms-cactus/ops/auto-devops/-/tree/0.0.8
include:
  - project: cms-cactus/ops/auto-devops
    ref: 0.0.8
    file: presets/blank-slate.yml

stages:
- üõ†Ô∏è setup
- synchronize
- üèóÔ∏è build
#- üêû test
#- üì¶ publish
- üöÄ deploy
#- üí£ cleanup

builder image:
  #image: gitlab-registry.cern.ch/cms-cactus/ops/auto-devops/basics-cc7:tag-0.0.8
  stage: üõ†Ô∏è setup
  extends: .auto_devops_docker_builder_autotag_onchange
  variables:
    DOCKERFILE: builder.Dockerfile
    CONTEXT_FOLDER: .gitlab/ci
    NAME: builder

synchronize:
  stage: synchronize
  variables:
    GIT_DEPTH: 0
    GIT_SUBMODULE_STRATEGY: normal
  rules:
    - if: "$PROJECT_ACCESS_TOKEN"
      #changes:
      # - hltpro/hltDAQPatch.py_template # rules: changes always evaluates to true when there is no Git push event (eg. submodule fetch)
      #when: manual
      allow_failure: true
  before_script:
    - |
      echo "Accessing GitLab as $GITLAB_USER_NAME ($GITLAB_USER_EMAIL)"
      git config --global user.name "$GITLAB_USER_NAME"
      git config --global user.email "$GITLAB_USER_EMAIL"
      git config --global push.default simple
      git remote add origin-write "https://gitlab-ci-token:$PROJECT_ACCESS_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git"
      git checkout "$CI_COMMIT_BRANCH"
  script:
    - >
      sed 
      -e "s/\${HLT_COMPRESSION_ALGORITHM}/""/" 
      -e "s/\${HLT_COMPRESSION_LEVEL}/1/" 
      -e "s/\${USE_FILE_BROKER_PY_BOOLEAN}/True/" 
      hltpro/hltDAQPatch.py_template > hltpro/hltDAQPatch.py

      git diff hltpro/hltDAQPatch.py || 
      echo "HLT config DAQ patch (hltDAQPatch.py) has changed. Committing changes." || 
      git commit -am "Update HLT config DAQ patch (Pipeline $CI_PIPELINE_ID)" || 
      git push origin-write $CI_COMMIT_BRANCH
 
build:RPMs:
  image: $CI_REGISTRY_IMAGE/builder:$CI_COMMIT_REF_NAME-latest
  stage: üèóÔ∏è build
  script:
    - make
  artifacts:
    paths:
      - rpms

#publish:docker:
#  extends: .auto_devops_docker_builder_autotag
#  stage: üì¶ publish
#  variables:
#    BUILD_ARG_CI_COMMIT_REF_NAME: $CI_COMMIT_REF_NAME

#publish:RPMs:
#  stage: üì¶ publish
#  extends: .auto_devops_upload_yum_repo_eos_template
#  variables:
#    LOCAL_FOLDER: rpms/python36
#    CERNBOX_FOLDER: /eos/user/c/cactus/www/cactus/release/cms-tsg-fog/ratemon/$CI_COMMIT_REF_SLUG/python36/$CI_COMMIT_SHA/centos7_gcc8_x86_64/

# deploy:test:
#   stage: üöÄ deploy
#   extends: .auto_devops_k8s_basic_deployment
#   variables:
#     HTTP_PORT: 8085
#   environment:
#     on_stop: cleanup:test

# cleanup:test:
#   stage: üí£ cleanup
#   extends: .auto_devops_k8s_basic_deployment_stop
#   dependencies: ["deploy:test"]

# trigger this job by manually creating a pipeline with your P5 credentials
deploy:P5:
  stage: üöÄ deploy
  extends: .auto_devops_p5_dropbox_push
  rules:
    # omit if user did not supply P5 credentials
  - if: $P5_USER == null || $P5_PASS == null
    when: never
    # only when tagged
  - if: $PACKAGE_VER_PATCH || $CI_COMMIT_TAG
    when: manual
    allow_failure: false
  - when: never
  variables:
    LOCAL_FOLDER: rpms/python27
    DROPBOX_OS: cc7
    DROPBOX_ZONE: cms
    DROPBOX_NAME: hltpro
    SSH_USERNAME: $P5_USER
    SSH_PASS: $P5_PASS
